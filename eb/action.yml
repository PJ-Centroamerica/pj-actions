name: 'EB Deployment'
description: 'Elastic Beanstalk workflow deployment'

inputs:
  application:
    description: 'Application name'
    required: true
  application_name:
    description: 'Alternative application name'
    required: false
  environment:
    description: 'Environment deployment'
    required: true
    default: 'development'
  aws-access-key-id:
    description: 'AWS access ID'
    required: true
  aws-secret-access-key:
    description: 'AWS access secret key'
    required: true
  aws-region:
    description: 'AWS region'
    required: true
    default: us-east-1
  icon:
    description: 'Country icon'
    required: true
  plataform:
    description: 'Environment plataform'
    required: true
  branch-release:
    description: 'Branch or release to deploy'
    required: true
  # slack-bot-token:
  #   description: 'Slack token'
  #   required: true
  # slack-channel:
  #   description: 'Slack channel'
  #   required: true
  teams-webhook:
    description: 'Teams webhook'
    required: false

runs:
    using: "composite"
    steps:

    - name: üîß  Get tag name
      shell: bash
      if: startsWith(github.ref, 'refs/tags/v')
      run: echo "RELEASE=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

    # - name: üöÄ Slack status
    #   if: ${{ always() }}
    #   id: slack
    #   uses: slackapi/slack-github-action@v1.23.0
    #   with:
    #     channel-id: ${{ inputs.slack-channel }}
    #     payload: |
    #       {
    #          "attachments":[
    #             {
    #                "mrkdwn_in": ["text"],
    #                "author_name":"Deployment ${{ inputs.application }}",
    #                "author_link":"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
    #                "color":"",
    #                "text":"${{ inputs.icon }} *Release* ${{ env.RELEASE }} _by @${{ github.actor }}_"
    #             }
    #          ]
    #       }
    #   continue-on-error: true
    #   env:
    #     SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
    #     RELEASE: ${{ env.RELEASE || inputs.branch-release }}

    - name: üåßÔ∏è Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: ‚ú® Checkout Code
      uses: actions/checkout@v4

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: üß∞ Install eb-cli
      shell: bash
      run: |
        python -m pip install --upgrade pip setuptools wheel 
        pip install urllib3==1.26.9
        pip install awsebcli --upgrade

    - name: üõ∏ Deploy Elastic Beanstalk
      shell: bash
      run: |
        eb --version
        eb init ${{ inputs.application_name || inputs.application }} --region ${{ inputs.aws-region }} --platform "${{ inputs.plataform }}"
        eb deploy ${{ inputs.application }}-${{ inputs.environment }} -v --process --message="${{ env.RELEASE || inputs.branch-release }}, pipeline: ${{ github.run_number }}"
    # - name: üöÄ Slack success ‚úÖ
    #   if: ${{ success() }}
    #   uses: slackapi/slack-github-action@v1.23.0
    #   with:
    #     channel-id: ${{ inputs.slack-channel }}
    #     payload: |
    #       {
    #          "attachments":[
    #             {
    #                "mrkdwn_in": ["text"],
    #                "author_name":"Deployment ${{ inputs.application }}",
    #                "author_link":"${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}/checks?check_suite_id=${{ github.run_id }}",
    #                "color":"#03fc28",
    #                "text":"${{ inputs.icon }} *Release* ${{ env.RELEASE }} _by @${{ github.actor }}_"
    #             }
    #          ]
    #       }
    #     update-ts: ${{ steps.slack.outputs.ts }}
    #   continue-on-error: true
    #   env:
    #     SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
    #     RELEASE: ${{ env.RELEASE || inputs.branch-release }}

    - name:  üöÄ Teams success ‚úÖ
      if: ${{ success() }}
      shell: bash
      run: |
        curl --silent \
        --output /dev/null \
        --header 'content-type: application/json' \
        --url '${{ inputs.teams-webhook }}' \
        --data-raw '{  
        "@type": "MessageCard",  
        "@context": "http://schema.org/extensions",  
        "themeColor": "03fc28",
        "summary": "Backend deployment (success) ‚úÖ",
        "sections": [{  
            "activityTitle": "Backend deployment (success) ‚úÖ", 
            "facts": [ 
            {  
                "name": "Application",  
                "value": "[${{ inputs.application }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}/checks?check_suite_id=${{ github.run_id }})"
            },  
            {  
                "name": "Country",
                "value": "${{ inputs.icon }}"
            },
            {
                "name": "Release",
                "value": "${{ env.RELEASE }}"
            },
            {  
                "name": "Triggered By",  
                "value": "@${{ github.actor }}"
            }],  
            "markdown": true  
          }]  
        }'
      continue-on-error: true
      env:
        RELEASE: ${{ env.RELEASE || inputs.branch-release }}

    # - name: üöÄ Slack failure ‚ùå
    #   if: ${{ failure() }}
    #   uses: slackapi/slack-github-action@v1.23.0
    #   with:
    #     channel-id: ${{ inputs.slack-channel }}
    #     payload: |
    #       {
    #          "attachments":[
    #             {
    #                "mrkdwn_in": ["text"],
    #                "author_name":"Deployment ${{ inputs.application }}",
    #                "author_link":"${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}/checks?check_suite_id=${{ github.run_id }}",
    #                "color":"#fc4503",
    #                "text":"${{ inputs.icon }} *Release* ${{ env.RELEASE }} _by @${{ github.actor }}_"
    #             }
    #          ]
    #       }
    #     update-ts: ${{ steps.slack.outputs.ts }}
    #   continue-on-error: true
    #   env:
    #     SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
    #     RELEASE: ${{ env.RELEASE || inputs.branch-release }}

    - name:  üöÄ Teams failure ‚ùå
      if: ${{ failure() }}
      shell: bash
      run: |
        curl --silent \
        --output /dev/null \
        --header 'content-type: application/json' \
        --url '${{ inputs.teams-webhook }}' \
        --data-raw '{  
        "@type": "MessageCard",  
        "@context": "http://schema.org/extensions",  
        "themeColor": "fc4503",
        "summary": "Backend deployment (failure) ‚ùå",
        "sections": [{  
            "activityTitle": "Backend deployment (failure) ‚ùå", 
            "facts": [ 
            {  
                "name": "Application",  
                "value": "[${{ inputs.application }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}/checks?check_suite_id=${{ github.run_id }})"
            },  
            {  
                "name": "Country",
                "value": "${{ inputs.icon }}"
            },
            {
                "name": "Release",
                "value": "${{ env.RELEASE }}"
            },
            {  
                "name": "Triggered By",  
                "value": "@${{ github.actor }}"
            }],  
            "markdown": true  
          }]  
        }'
      continue-on-error: true
      env:
        RELEASE: ${{ env.RELEASE || inputs.branch-release }}

    # - name: üöÄ Slack cancelled ‚ö†Ô∏è
    #   if: ${{ cancelled() }}
    #   uses: slackapi/slack-github-action@v1.23.0
    #   with:
    #     channel-id: ${{ inputs.slack-channel }}
    #     payload: |
    #       {
    #          "attachments":[
    #             {
    #                "mrkdwn_in": ["text"],
    #                "author_name":"Deployment ${{ inputs.application }}",
    #                "author_link":"${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}/checks?check_suite_id=${{ github.run_id }}",
    #                "color":"#fce803",
    #                "text":"${{ inputs.icon }} *Release* ${{ env.RELEASE }} _by @${{ github.actor }}_"
    #             }
    #          ]
    #       }
    #     update-ts: ${{ steps.slack.outputs.ts }}
    #   continue-on-error: true
    #   env:
    #     SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
    #     RELEASE: ${{ env.RELEASE || inputs.branch-release }}

    - name:  üöÄ Teams cancelled ‚ö†Ô∏è
      if: ${{ cancelled() }}
      shell: bash
      run: |
        curl --silent \
        --output /dev/null \
        --header 'content-type: application/json' \
        --url '${{ inputs.teams-webhook }}' \
        --data-raw '{  
        "@type": "MessageCard",  
        "@context": "http://schema.org/extensions",  
        "themeColor": "fce803",
        "summary": "Backend deployment (cancelled) ‚ö†Ô∏è",
        "sections": [{  
            "activityTitle": "Backend deployment (cancelled) ‚ö†Ô∏è", 
            "facts": [ 
            {  
                "name": "Application",  
                "value": "[${{ inputs.application }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}/checks?check_suite_id=${{ github.run_id }})"
            },  
            {  
                "name": "Country",
                "value": "${{ inputs.icon }}"
            },
            {
                "name": "Release",
                "value": "${{ env.RELEASE }}"
            },
            {  
                "name": "Triggered By",  
                "value": "@${{ github.actor }}"
            }],  
            "markdown": true  
          }]  
        }'
      continue-on-error: true
      env:
        RELEASE: ${{ env.RELEASE || inputs.branch-release }}
